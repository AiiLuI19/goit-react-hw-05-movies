{"version":3,"file":"static/js/movie-details-page.3a281dc1.chunk.js","mappings":"oOA8DA,EA1DqB,SAAC,GAAe,IAAD,IAAZA,EAAY,EAAZA,MAChBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QACP,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAUI,aAAV,SAAiBC,KAAjB,UAAwBL,EAASI,aAAjC,aAAwB,EAAgBC,KAAO,WAI/CC,EAMEP,EANFO,eACAC,EAKER,EALFQ,OACAC,EAIET,EAJFS,aACAC,EAGEV,EAHFU,SACAC,EAEEX,EAFFW,YACAC,EACEZ,EADFY,aAEF,OACE,+BACE,4BACE,SAAC,KAAD,CAAMC,GAAIV,EAASW,QAAnB,2BACA,4BACE,gCACE,gBACEC,IAAG,8DAAyDJ,GAC5DK,IAAKT,KAEP,0BACGA,EADH,KACqB,IAAIU,KAAKL,GAAcM,cAD5C,QAGA,wCAAgBT,EAAhB,SACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIF,EAAOW,KAAI,qBAAGC,QAAiBC,KAAK,YAE1C,gCACE,oDACA,SAAC,KAAD,CAAMR,GAAG,OAAOR,MAAO,CAAEC,KAAML,EAASqB,UAAxC,mBAGA,SAAC,KAAD,CAAMT,GAAG,UAAT,4BAGJ,SAAC,KAAD,U,SCxBR,EAhByB,WACvB,IAAQU,EAAoBC,EAAAA,EAAAA,gBAC5B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACHF,GAGLJ,EAAgBI,GAASG,MAAK,SAAAC,GAC5BL,EAASK,QAEV,CAACJ,EAASJ,KAEN,6BAAUvB,IAAS,SAAC,EAAD,CAAcA,MAAOA,Q,kBCnBjD,IAmDMgC,EAAM,CACVC,cApDoB,WACpB,OAAOC,MAAM,4FAEXJ,MAAK,SAAAK,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBA8ClCC,kBA3CwB,SAAAC,GACxB,OAAOR,MAAM,2GAAD,OACiGQ,IAC3GZ,MAAK,SAAAK,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBAqClCjB,gBAlCsB,SAAAoB,GACtB,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,6DAEVb,MAAK,SAAAK,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBA4BlCI,mBAzByB,SAAAD,GACzB,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,qEAEVb,MAAK,SAAAK,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBAmBlCK,mBAhByB,SAAAF,GACzB,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,qEAEVb,MAAK,SAAAK,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,kBAYpC","sources":["components/MovieDetails/MovieDetails.js","pages/MovieDetailsPage.js","services/fetchApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\n\nconst MovieDetails = ({ movie }) => {\n  const location = useLocation();\n  const backLink = useRef(\n    location?.state?.from ? location.state?.from : '/movies'\n  );\n\n  const {\n    original_title,\n    genres,\n    vote_average,\n    overview,\n    poster_path,\n    release_date,\n  } = movie;\n  return (\n    <>\n      <div>\n        <Link to={backLink.current}>&#171; Go back</Link>\n        <div>\n          <section>\n            <img\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${poster_path}`}\n              alt={original_title}\n            />\n            <h2>\n              {original_title} ({new Date(release_date).getFullYear()})\n            </h2>\n            <p>User Score: {vote_average}% </p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(({ name }) => name).join(', ')}</p>\n          </section>\n          <section>\n            <h2>Additional information</h2>\n            <Link to=\"cast\" state={{ from: location.pathname }}>\n              Cast\n            </Link>\n            <Link to=\"reviews\">Reviews</Link>\n          </section>\n        </div>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string,\n    genres: PropTypes.array,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieDetails from '../components/MovieDetails/MovieDetails';\nimport fetchApi from '../services/fetchApi';\n\nconst MovieDetailsPage = () => {\n  const { fetchMoviesInfo } = fetchApi;\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    fetchMoviesInfo(movieId).then(results => {\n      setMovie(results);\n    });\n  }, [movieId, fetchMoviesInfo]);\n\n  return <section>{movie && <MovieDetails movie={movie} />}</section>;\n};\nexport default MovieDetailsPage;\n","const fetchTrending = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=d3e8a787d9b4dc35185152e0bafc0774`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchSearchMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US&query=${query}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchMoviesInfo = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchMoviesCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchMoviesReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchMoviesInfo,\n  fetchMoviesCredits,\n  fetchMoviesReviews,\n};\n\nexport default api;\n\n// kay = d3e8a787d9b4dc35185152e0bafc0774;\n// https://api.themoviedb.org/3/trending/all/day?api_key=d3e8a787d9b4dc35185152e0bafc0774  тренд\n\n// https://api.themoviedb.org/3/search/movie?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US&page=1&include_adult=false   поиск фильмов\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US инфо о фильме\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US  актерский состав\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US&page=1   запрос обзоров для страницы кинофильма\n"],"names":["movie","location","useLocation","backLink","useRef","state","from","original_title","genres","vote_average","overview","poster_path","release_date","to","current","src","alt","Date","getFullYear","map","name","join","pathname","fetchMoviesInfo","fetchApi","useState","setMovie","movieId","useParams","useEffect","then","results","api","fetchTrending","fetch","response","ok","json","Promise","reject","Error","fetchSearchMovies","query","id","fetchMoviesCredits","fetchMoviesReviews"],"sourceRoot":""}