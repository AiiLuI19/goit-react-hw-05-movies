{"version":3,"file":"static/js/cast.cb732bad.chunk.js","mappings":"oOA4BA,MA3BA,YAAwD,IAA7BA,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAC1C,OACE,gCACIA,GAQA,gBACEC,IAAG,8CAAyCD,GAC5CE,IAAKJ,KATP,gBACEG,IAAKE,EAAQ,KACbD,IAAI,MACJE,MAAM,QACNC,OAAO,WAQX,wBAAKP,KACL,uCAAeC,SCiBrB,EA/Ba,WACX,IAAQO,EAAuBC,EAAAA,EAAAA,mBAC/B,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACHF,GAGLL,EAAmBK,GAASG,MAAK,SAAAC,GAC/BL,EAAQK,EAAQN,WAEjB,CAACE,EAASL,KAGX,wBACGG,GACCA,EAAKO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAInB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWmB,EAAmB,EAAnBA,aAC/B,OACE,yBACE,SAAC,EAAD,CACEpB,KAAMA,EACNC,UAAWA,EACXC,QAASkB,KAJJD,U,kBCvBrB,IAmDME,EAAM,CACVC,cApDoB,WACpB,OAAOC,MAAM,4FAEXP,MAAK,SAAAQ,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBA8ClCC,kBA3CwB,SAAAC,GACxB,OAAOR,MAAM,2GAAD,OACiGQ,IAC3Gf,MAAK,SAAAQ,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBAqClCG,gBAlCsB,SAAAb,GACtB,OAAOI,MAAM,sCAAD,OAC4BJ,EAD5B,6DAEVH,MAAK,SAAAQ,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBA4BlCrB,mBAzByB,SAAAW,GACzB,OAAOI,MAAM,sCAAD,OAC4BJ,EAD5B,qEAEVH,MAAK,SAAAQ,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iBAmBlCI,mBAhByB,SAAAd,GACzB,OAAOI,MAAM,sCAAD,OAC4BJ,EAD5B,qEAEVH,MAAK,SAAAQ,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,kBAYpC,O","sources":["components/MovieCastRender/MovieCastRender.js","components/Cast/Cast.js","services/fetchApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nfunction MovieCastRender({ name, character, profile }) {\n  return (\n    <>\n      {!profile ? (\n        <img\n          src={require('../../imeges/Z2000128425.jpg')}\n          alt=\"404\"\n          width=\"185px\"\n          height=\"278px\"\n        />\n      ) : (\n        <img\n          src={`https://www.themoviedb.org/t/p/w185/${profile}`}\n          alt={name}\n        />\n      )}\n      <h2>{name}</h2>\n      <p>Character: {character}</p>\n    </>\n  );\n}\n\nMovieCastRender.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  profile: PropTypes.string,\n};\nexport default MovieCastRender;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchApi from '../../services/fetchApi';\nimport MovieCastRender from '../MovieCastRender/MovieCastRender';\nconst Cast = () => {\n  const { fetchMoviesCredits } = fetchApi;\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    fetchMoviesCredits(movieId).then(results => {\n      setCast(results.cast);\n    });\n  }, [movieId, fetchMoviesCredits]);\n\n  return (\n    <ul>\n      {cast &&\n        cast.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id}>\n              <MovieCastRender\n                name={name}\n                character={character}\n                profile={profile_path}\n              />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\nexport default Cast;\n","const fetchTrending = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=d3e8a787d9b4dc35185152e0bafc0774`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchSearchMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US&query=${query}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchMoviesInfo = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchMoviesCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\nconst fetchMoviesReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No Movie'));\n  });\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchMoviesInfo,\n  fetchMoviesCredits,\n  fetchMoviesReviews,\n};\n\nexport default api;\n\n// kay = d3e8a787d9b4dc35185152e0bafc0774;\n// https://api.themoviedb.org/3/trending/all/day?api_key=d3e8a787d9b4dc35185152e0bafc0774  тренд\n\n// https://api.themoviedb.org/3/search/movie?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US&page=1&include_adult=false   поиск фильмов\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US инфо о фильме\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US  актерский состав\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=d3e8a787d9b4dc35185152e0bafc0774&language=en-US&page=1   запрос обзоров для страницы кинофильма\n"],"names":["name","character","profile","src","alt","require","width","height","fetchMoviesCredits","fetchApi","useState","cast","setCast","movieId","useParams","useEffect","then","results","map","id","profile_path","api","fetchTrending","fetch","response","ok","json","Promise","reject","Error","fetchSearchMovies","query","fetchMoviesInfo","fetchMoviesReviews"],"sourceRoot":""}